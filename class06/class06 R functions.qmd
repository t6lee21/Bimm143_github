---
title: "class06:R functions"
author: "Trinity Lee A16639698"
format: pdf
---
##All about functions in R

Functions in R require starting with samll defined input vectors and then building up to more complex vectors.

Today in lab we will look at developing a functions for calculating grades of students in class.

#input vectors of students to start with
```{r}
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

To find out the average of scores we can use the `mean` function
```{r}
mean(student1)
```

Dropping the lowest score should give us an average of 100
The lowest value can be found using the `min` function

```{r}
min(student1)
```

Using the `which.min` function 

```{r}
student1
which.min(student1)
```

Using the minus syntax trick I can get everything but the element with the min value. The first working snipet of code is created.

```{r}
student1[-which.min(student1)]
mean(student1[-which.min(student1)])
```

Testing code on student2

```{r}
student2
mean(student2[-which.min(student2)])
```

Finding the problem - NA input in the `mean()`

```{r}
mean(student2,na.rm=TRUE)
```

looking at student 3 
```{r}
mean(student3,na.rm=TRUE)
```

Want to stop working with `student1`,`student2`,`student3` so instead work with an input called `x`.

```{r}
x<-student2
x
```

We want to overwrite the NA values with zero - if you miss a homework you score zero on the homework.

AI told us about the `is.na()` function.

```{r}
x
is.na(x)
```

Checking the fucntion for all students to turn NA to 0 and drop lowest score when averaged
```{r}
x[is.na(x)]<-0
x
mean(x[-which.min(x)])
```

```{r}
x<-student3
x[is.na(x)]<-0
x
mean(x[-which.min(x)])
```
 
```{r}
x<-student1
# mask NA values to zero
x[is.na(x)]<-0
#Drop lowest scire and get the mean
mean(x[-which.min(x)])
```
 
>Q1. Write a function grade() to determine an overall grade from a vector of student homework assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an NA value) this can be used as a score to be potentially dropped. Your final function should be adquately explained with code comments and be able to work on an example class gradebook such as this one in CSV format: “https://tinyurl.com/gradeinput” [3pts]

```{r}
grade<-function(x){
# mask NA values to zero
x[is.na(x)]<-0
#Drop lowest scire and get the mean
mean(x[-which.min(x)])}
```

```{r}
grade(student1)
```

Now we need to read the grade book

```{r}
gradebook<-read.csv('https://tinyurl.com/gradeinput',row.names=1)
gradebook
```

The `apply()` function can be used to figure out the question
```{r}
apply(gradebook,1,grade)
```
Answer
```{r}
ans<-apply(gradebook,1,grade)
ans
```

Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student overall in the gradebook? [3pts]

```{r}
which.max(ans)
```

Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained the lowest scores overall? [2pts]

```{r}
mask<-gradebook
mask[is.na(mask)]<-0
ans3<-apply(mask,2,mean)
ans3
which.min(ans3)
```
Q4. Optional Extension: From your analysis of the gradebook, which homework was most predictive of overall score (i.e. highest correlation with average grade score)? [1pt]

```{r}
ans4<-apply(mask,2,cor,ans)
ans4
which.max(ans4)
```

